name: Build and Release

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build-windows:
    name: Build Windows x64
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.3'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Build with Electron Builder
        run: npx electron-builder --win --x64

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Foxford-Windows-x64
          path: dist/

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64, universal]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.3'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Build macOS with Electron Builder
        run: |
          if [ "${{ matrix.arch }}" == "universal" ]; then
            npx electron-builder --mac --x64 --arm64 --universal
          else
            npx electron-builder --mac --${{ matrix.arch }}
          fi

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Foxford-macOS-${{ matrix.arch }}
          path: dist/

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.3'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Build Linux with Electron Builder
        run: npx electron-builder --linux --${{ matrix.arch }}

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Foxford-Linux-${{ matrix.arch }}
          path: dist/

  release:
    name: Create GitHub Release
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: Foxford-Windows-x64
          path: releases/windows/

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v3
        with:
          name: Foxford-macOS-x64
          path: releases/macos/x64/
      - uses: actions/download-artifact@v3
        with:
          name: Foxford-macOS-arm64
          path: releases/macos/arm64/
      - uses: actions/download-artifact@v3
        with:
          name: Foxford-macOS-universal
          path: releases/macos/universal/

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: Foxford-Linux-x64
          path: releases/linux/x64/
      - uses: actions/download-artifact@v3
        with:
          name: Foxford-Linux-arm64
          path: releases/linux/arm64/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/windows/
          asset_name: Foxford-Windows-x64.zip
          asset_content_type: application/zip

      - name: Upload macOS x64 Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/macos/x64/
          asset_name: Foxford-macOS-x64.dmg
          asset_content_type: application/x-diskimage

      - name: Upload macOS arm64 Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/macos/arm64/
          asset_name: Foxford-macOS-arm64.dmg
          asset_content_type: application/x-diskimage

      - name: Upload macOS Universal Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/macos/universal/
          asset_name: Foxford-macOS-universal.dmg
          asset_content_type: application/x-diskimage

      - name: Upload Linux x64 Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/linux/x64/
          asset_name: Foxford-Linux-x64.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Linux arm64 Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/linux/arm64/
          asset_name: Foxford-Linux-arm64.AppImage
          asset_content_type: application/octet-stream
