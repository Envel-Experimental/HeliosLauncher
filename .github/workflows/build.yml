name: Build and Release

on:
  push:
    branches:
      - '**'          # любая ветка
  workflow_dispatch:   # ручной запуск

permissions:
  contents: write

env:
  BRANCH_NAME: ${{ github.ref_name }}
  COMMIT_SHA:  ${{ github.sha }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}   # ← ключевая строчка

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: npm ci

      - name: Install Flatpak toolchain (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder gnome-software-plugin-flatpak
          flatpak --version

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_BRANCH: ${{ env.BRANCH_NAME }}
          GIT_SHA:    ${{ env.COMMIT_SHA }}
        run: npm run dist
      
      - name: List dist (Linux/macOS)
        if: runner.os != 'Windows'
        run: ls -la dist

      - name: List dist (Windows)
        if: runner.os == 'Windows'
        run: Get-ChildItem dist
        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}
          path: |
            dist/**/*.dmg
            dist/**/*.AppImage
            dist/**/*.deb
            dist/**/*.rpm
            dist/**/*.snap
            dist/**/*.flatpak
            dist/**/*.tar.gz
            dist/**/*.exe
            dist/**/*.blockmap
            dist/**/*.yml
          if-no-files-found: warn
          
  create_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts from all jobs
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Decide tag / prerelease / names
        id: vars
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          COMMIT="${GITHUB_SHA}"

          # главный релиз: ветка master + коммит со словом release
          if [[ "$BRANCH" == "master" && "${{ github.event.head_commit.message }}" == "release" ]]; then
            echo "tag_name=release-${{ github.run_id }}" >> $GITHUB_OUTPUT
            echo "prerelease=false"                    >> $GITHUB_OUTPUT
            echo "release_name=Release build"          >> $GITHUB_OUTPUT
          # pre-release: ветка master, но без commit 'release'
          elif [[ "$BRANCH" == "master" ]]; then
            echo "tag_name=prerelease-${{ github.run_id }}" >> $GITHUB_OUTPUT
            echo "prerelease=true"                         >> $GITHUB_OUTPUT
            echo "release_name=Prerelease build from master" >> $GITHUB_OUTPUT
          # beta-релиз со сторонней ветки
          else
            echo "tag_name=beta-${BRANCH}-${{ github.run_id }}" >> $GITHUB_OUTPUT
            echo "prerelease=true"                              >> $GITHUB_OUTPUT
            echo "release_name=Beta build from ${BRANCH}"       >> $GITHUB_OUTPUT
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.14.0
        with:
          tag:  ${{ steps.vars.outputs.tag_name }}
          name: ${{ steps.vars.outputs.release_name }}
          prerelease: ${{ steps.vars.outputs.prerelease }}
          body: |
            **Branch**:  ${{ steps.vars.outputs.branch }}
            **Commit**:  ${{ steps.vars.outputs.commit }}
            
            Built automatically by workflow run ${{ github.run_id }}.
          artifacts: |
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.snap
            artifacts/**/*.flatpak
            artifacts/**/*.tar.gz
            artifacts/**/*.exe
            artifacts/**/*.blockmap
            artifacts/**/*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
